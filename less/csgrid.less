@import "mixins";
@import "variables";

.csgrid {
    .oh;
}

.csgrid-header {
    .por;

    > table {
        .tb;
        .cl(@table-font-color);
        .fs(@font-size);
        .fw(@table-thead-font-weight);
        .bgc(@table-thead-bgColor);
        .br(@table-border-color);

        > tbody > tr {
            .h(@table-thead-height);

            > td {
                .bl(@table-thead-border-color);
                .bt(@table-thead-border-color);

                &:first-child {
                    border-left-color: @table-border-color;
                }
            }

            &:first-child > td {
                border-top-width: 0;
            }
        }
    }
}

.csgrid-body {
    .ofx(hidden);
    .ofy;

    > table:extend(.csgrid-header>table) {
        .bgc;
        .fw;
        .bb(@table-border-color);

        > tbody > tr {
            &:nth-of-type(odd) {
                .bgc(@table-bg-accent);
            }

            &:hover {
                .bgc(@table-bg-hover);
            }

            > td:extend(.csgrid-header>table>tbody>tr>td) {
                .bc(@table-border-color);
            }
        }
    }
}

.csgrid-footer {
    .fs(@font-size);
    .bgc(@table-thead-bgColor);
    .p(@table-cell-padding);
    .tr;
}

.csgrid-nodata {
    .fs(@font-size);
    .h(@table-nodata-height);
    .lh(@table-nodata-height);
    .bgc(@table-bg-accent);
    .border(@table-border-color);
}

.csgrid-cell {
    .p(0 @table-cell-padding);
    .to;
    .tc;
}

.csgrid-emptycell {
    .poa;
    .pos-tr;
    .size(@table-emptycell-width);
    .bgc(@table-thead-bgColor);
}